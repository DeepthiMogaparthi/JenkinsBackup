<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.mavenrepocleaner.MavenRepoCleanerProperty plugin="maven-repo-cleaner@1.2">
      <notOnThisProject>false</notOnThisProject>
    </org.jenkinsci.plugins.mavenrepocleaner.MavenRepoCleanerProperty>
    <com.synopsys.arc.jenkinsci.plugins.jobrestrictions.jobs.JobRestrictionProperty plugin="job-restrictions@0.7"/>
    <org.jenkinsci.plugins.sharedworkspace.SharedWorkspace plugin="shared-workspace@1.0.2">
      <name>NONE</name>
    </org.jenkinsci.plugins.sharedworkspace.SharedWorkspace>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>string3</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>choice3</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>select</string>
              <string>car</string>
              <string>bike</string>
              <string>truck</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <com.cwctravel.hudson.plugins.extended__choice__parameter.ExtendedChoiceParameterDefinition plugin="extended-choice-parameter@0.76">
          <name>jobscheck3</name>
          <description></description>
          <quoteValue>false</quoteValue>
          <saveJSONParameterToFile>false</saveJSONParameterToFile>
          <visibleItemCount>3</visibleItemCount>
          <type>PT_CHECKBOX</type>
          <value>try,try2</value>
          <multiSelectDelimiter>,</multiSelectDelimiter>
          <projectName>try3</projectName>
        </com.cwctravel.hudson.plugins.extended__choice__parameter.ExtendedChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <authToken>xyz</authToken>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

echo &quot;$JOB_NAME&quot;



echo &quot;the string selected  is $string3&quot;
echo &quot;the choice selected  is $choice3&quot;
#echo &quot;the checkbox choice coming from job2 is  ${jobscheck3}&quot;

#read $jobscheck1

#temp=$(echo &apos;${jobscheck1}&apos;)

#------------------------------------------------------------


array3[0]=&quot;car&quot; 
array3[1]=&quot;bike&quot;
array3[2]=&quot;truck&quot;

echo &quot;value at 0  ${array3[0]} &quot;
echo &quot;value at 1  ${array3[1]} &quot;
echo &quot;value at 2  ${array3[2]} &quot;


echo &quot;the string value entered by  is $string3&quot;
echo &quot;the job you have selected is    $jobscheck3&quot;
echo &quot;the choice you have selected is $choice3&quot;

read $choice3
#read $jobscheck3

#if [ &quot;$jobscheck2&quot; == &quot;try&quot; -o &quot;$jobscheck2&quot; == &quot;try3&quot; ] ;then


if [ &quot;$jobscheck3&quot; == &quot;try&quot; ] ;then

for i in &quot;${array3[@]}&quot;
do
    if [ &quot;$i&quot; == &quot;$choice3&quot; ] ; then
        echo &quot;Found $choice3&quot;  
        echo &quot;triggered next job&quot;
        crumb= curl &quot;http://13.232.161.117:8080/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,%22:%22,//crumb)&quot; 
		curl -v -H $crumb -X POST &quot;http://13.232.161.117:8080/job/try/buildWithParameters?token=abc&amp;string1=$string3&amp;choice1=$choice3&amp;jobscheck1=$jobscheck3&quot;   
    fi    
done

fi


#---------------------------------------------------

#if [ &quot;$jobscheck2&quot; == &quot;try&quot; -o &quot;$jobscheck2&quot; == &quot;try3&quot; ] ;then

if [ &quot;$jobscheck3&quot; == &quot;try2&quot; ] ;then

for i in &quot;${array3[@]}&quot;
do
    if [ &quot;$i&quot; == &quot;$choice3&quot; ] ; then
        echo &quot;Found $choice3&quot;  
        echo &quot;triggered next job&quot;
        crumb= curl &quot;http://13.232.161.117:8080/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,%22:%22,//crumb)&quot; 
		curl -v -H $crumb -X POST &quot;http://13.232.161.117:8080/job/try2/buildWithParameters?token=lmn&amp;string2=$string3&amp;choice2=$choice3&amp;jobscheck2=$jobscheck3&quot;   
    fi    
done

fi


#-------------------------------------------------------------



if [ &quot;$jobscheck3&quot; == &quot;try&quot; -a &quot;$jobscheck2&quot; == &quot;try2&quot; ] ;then



for i in &quot;${array3[@]}&quot;
do
    if [ &quot;$i&quot; == &quot;$choice3&quot; ] ; then
        echo &quot;Found $choice3&quot;  
        echo &quot;triggered next job&quot;
        crumb= curl &quot;http://13.232.161.117:8080/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,%22:%22,//crumb)&quot; 
		curl -v -H $crumb -X POST &quot;http://13.232.161.117:8080/job/try/buildWithParameters?token=abc&amp;string1=$string2&amp;choice1=$choice2&amp;jobscheck1=$jobscheck2&quot;   
        curl -v -H $crumb -X POST &quot;http://13.232.161.117:8080/job/try2/buildWithParameters?token=lmn&amp;string2=$string3&amp;choice2=$choice3&amp;jobscheck2=$jobscheck3&quot;      
        
    fi    
done

fi
#-----------------------------------------------------------------------













</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>