<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.mavenrepocleaner.MavenRepoCleanerProperty plugin="maven-repo-cleaner@1.2">
      <notOnThisProject>false</notOnThisProject>
    </org.jenkinsci.plugins.mavenrepocleaner.MavenRepoCleanerProperty>
    <com.synopsys.arc.jenkinsci.plugins.jobrestrictions.jobs.JobRestrictionProperty plugin="job-restrictions@0.7"/>
    <org.jenkinsci.plugins.sharedworkspace.SharedWorkspace plugin="shared-workspace@1.0.2">
      <name>NONE</name>
    </org.jenkinsci.plugins.sharedworkspace.SharedWorkspace>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>string2</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>choice2</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>select</string>
              <string>car</string>
              <string>bike</string>
              <string>truck</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <com.cwctravel.hudson.plugins.extended__choice__parameter.ExtendedChoiceParameterDefinition plugin="extended-choice-parameter@0.76">
          <name>jobscheck2</name>
          <description></description>
          <quoteValue>false</quoteValue>
          <saveJSONParameterToFile>false</saveJSONParameterToFile>
          <visibleItemCount>3</visibleItemCount>
          <type>PT_CHECKBOX</type>
          <value>try,try3</value>
          <multiSelectDelimiter>,</multiSelectDelimiter>
          <projectName>try2</projectName>
        </com.cwctravel.hudson.plugins.extended__choice__parameter.ExtendedChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <authToken>lmn</authToken>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

echo &quot;$JOB_NAME&quot;

array2[0]=&quot;car&quot; 
array2[1]=&quot;bike&quot;
array2[2]=&quot;truck&quot;

echo &quot;value at 0  ${array2[0]} &quot;
echo &quot;value at 1  ${array2[1]} &quot;
echo &quot;value at 2  ${array2[2]} &quot;


echo &quot;the string value entered by  is $string2&quot;
echo &quot;the choice you have selected is $choice2&quot;
echo &quot;the job you have selected is    $jobscheck2&quot;



echo ADD1=`echo $jobscheck2| cut -d \, -f 1`
echo ADD2=`echo $jobscheck2| cut -d \, -f 2`

arraynew[0]=&quot;ADD1&quot;
arraynew[1]=&quot;ADD2&quot;

echo &quot;value at checkbox array ${arraynew[0]}&quot;
echo &quot;value at checkbox array ${arraynew[1]}&quot;

#read $jobscheck2

read $choice2
#read $jobscheck2

#if [ &quot;$jobscheck2&quot; == &quot;try&quot; -o &quot;$jobscheck2&quot; == &quot;try3&quot; ] ;then
#split

#--------------------------------------------------



if [ &quot;$jobscheck2&quot; == &quot;try&quot; ] ;then

for i in &quot;${array2[@]}&quot;
do
    if [ &quot;$i&quot; == &quot;$choice2&quot; ] ; then
        echo &quot;Found $choice2&quot;  
        echo &quot;triggered next job&quot;
        crumb= curl &quot;http://13.232.161.117:8080/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,%22:%22,//crumb)&quot; 
		curl -v -H $crumb -X POST &quot;http://13.232.161.117:8080/job/try/buildWithParameters?token=abc&amp;string1=$string2&amp;choice1=$choice2&amp;jobscheck1=$jobscheck2&quot;     
    fi    
done
	
else
	# Log Location on Server.
	LOG_LOCATION=$WORKSPACE
	exec &gt; &gt;(tee -i $LOG_LOCATION/MylogFile.log)
	exec 2&gt;&amp;1

#echo &quot;Log Location should be: [ $LOG_LOCATION ]&quot;
	echo &quot;The file failed because of unmatching&quot;

fi


#---------------------------------------------------

#if [ &quot;$jobscheck2&quot; == &quot;try&quot; -o &quot;$jobscheck2&quot; == &quot;try3&quot; ] ;then

if [ &quot;$jobscheck2&quot; == &quot;try3&quot; ] ;then

for i in &quot;${array2[@]}&quot;
do
    if [ &quot;$i&quot; == &quot;$choice2&quot; ] ; then
        echo &quot;Found $choice2&quot;  
        echo &quot;triggered next job&quot;
        crumb= curl &quot;http://13.232.161.117:8080/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,%22:%22,//crumb)&quot; 
		curl -v -H $crumb -X POST &quot;http://13.232.161.117:8080/job/try3/buildWithParameters?token=xyz&amp;string3=$string2&amp;choice3=$choice2&amp;jobscheck3=$jobscheck2&quot;   
    fi    
done

fi


#-------------------------------------------------------------







</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.63">
      <recipientList>deepthimogaparthi1207@gmail.com</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.SuccessTrigger>
          <email>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.SuccessTrigger>
        <hudson.plugins.emailext.plugins.trigger.FailureTrigger>
          <email>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FailureTrigger>
      </configuredTriggers>
      <contentType>default</contentType>
      <defaultSubject>$DEFAULT_SUBJECT</defaultSubject>
      <defaultContent>job failed because of type mismatch</defaultContent>
      <attachmentsPattern></attachmentsPattern>
      <presendScript>$DEFAULT_PRESEND_SCRIPT</presendScript>
      <postsendScript>$DEFAULT_POSTSEND_SCRIPT</postsendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo>$DEFAULT_REPLYTO</replyTo>
      <from></from>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
  </publishers>
  <buildWrappers/>
</project>